.login{background-attachment:fixed;background-image:var(--CUSTOM-IMAGE-SM,var(--CUSTOM-BACK));background-position:50%;background-size:cover}@media (min-width:768px){.login{background-image:var(--CUSTOM-IMAGE-MD,var(--CUSTOM-IMAGE-SM,var(--CUSTOM-BACK)))}}@media (min-width:992px){.login{background-image:none}}@media (min-width:1200px){.login{background-image:none}}.login .app-header .app-home,.login .app-header .app-menu-toggler,.login .app-header .app-user{display:none!important}.login .app-main{-webkit-box-align:center;-ms-flex-align:center;-webkit-box-pack:center;-ms-flex-pack:center;align-items:center;background:-webkit-gradient(linear,left bottom,left top,from(#fff),to(transparent));background:linear-gradient(0deg,#fff,transparent);display:-webkit-box;display:-ms-flexbox;display:flex;justify-content:center}.login .login-box{background-color:var(--WHITE);border-radius:.375rem;-webkit-box-shadow:0 .5rem .75rem rgba(0,0,0,.05);box-shadow:0 .5rem .75rem rgba(0,0,0,.05);-webkit-transform:translateY(-5%);transform:translateY(-5%);width:280px}@media (min-width:576px){.login .login-box{width:360px}}@media (min-width:992px){.login .login-box{-webkit-transform:translateY(0);transform:translateY(0)}}.login .login-box>*{padding:1.5rem}.login .login-box p{margin:0}.login .login-box p+p{margin-top:.5rem}.login .login-box a{text-decoration:none}.login .login-box--header{border-bottom:1px solid var(--BORDER-LIGHT);text-align:center}.login .login-box--header h1,.login .login-box--header h2,.login .login-box--header h3,.login .login-box--header h4,.login .login-box--header h5,.login .login-box--header h6{font-size:1.8rem;margin:0}.login .login-box--header h1+p,.login .login-box--header h2+p,.login .login-box--header h3+p,.login .login-box--header h4+p,.login .login-box--header h5+p,.login .login-box--header h6+p{margin-top:.75rem}.login .alert{border:none;border-radius:0;margin-bottom:0}.login .login-box--body{text-align:center}.login .login-box--footer{-webkit-box-align:center;-ms-flex-align:center;-webkit-box-pack:justify;-ms-flex-pack:justify;align-items:center;border-top:1px solid var(--BORDER-LIGHT);display:-webkit-box;display:-ms-flexbox;display:flex;justify-content:space-between}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */