.eval-header,.postit-header{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;margin-bottom:2rem;padding-top:.5rem}.eval-header .btn,.postit-header .btn{margin-bottom:.5rem}.eval-header a,.postit-header a{text-decoration:none}@media (min-width:992px){.eval-header,.postit-header{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.eval-header .btn,.postit-header .btn{margin-bottom:0;margin-right:1rem;margin-top:0}.eval-header a:not(.btn),.postit-header a:not(.btn){margin-left:auto}}.eval-nav,.postit-nav{border-bottom:1px solid var(--CUSTOM-PRIMARY);border-top:1px solid var(--CUSTOM-PRIMARY);display:-webkit-box;display:-ms-flexbox;display:flex;margin-bottom:2rem;padding:.5rem 0}.eval-nav .dropdown-toggle,.postit-nav .dropdown-toggle{background-color:var(--CUSTOM-PRIMARY);color:#fff;display:block;height:32px;margin-right:.875rem;margin-top:3px;width:32px}.eval-nav .dropdown-toggle:after,.postit-nav .dropdown-toggle:after{display:none}.eval-nav h1,.postit-nav h1{margin:0!important}.eval-nav .clipboard,.postit-nav .clipboard{margin-left:auto;margin-top:.5rem;padding-left:1rem}.eval-content,.postit-content{padding-bottom:1rem}.eval-section,.postit-section{margin-bottom:2rem}.eval-section:last-child,.postit-section:last-child{margin-bottom:0}.eval-footer,.postit-footer{margin:1.5rem 0 1rem}.eval-footer .eval-pagination,.postit-footer .eval-pagination{-webkit-box-pack:center;-ms-flex-pack:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;justify-content:center}.eval-footer .eval-validation,.postit-footer .eval-validation{text-align:right}.eval h1,.postit h1{font-size:2rem;font-weight:400}.eval h1,.eval h2,.postit h1,.postit h2{color:var(--CUSTOM-PRIMARY);margin-bottom:0}.eval h2,.postit h2{font-size:1.425rem;font-weight:600}.eval h2:before,.postit h2:before{background-color:var(--CUSTOM-PRIMARY);content:"";display:inline-block;height:.75em;margin-right:.5em;width:.75em}.eval h2 .feather,.postit h2 .feather{stroke-width:1.5;color:var(--TEXT-DIMED);margin-left:.25rem;margin-top:-2px;-webkit-transition:color .2s;transition:color .2s}.eval h2 .feather:hover,.postit h2 .feather:hover{color:var(--TXT)}.eval h3,.postit h3{font-size:1.125rem;font-weight:400;margin-bottom:0;text-decoration:underline}.eval .form-help,.postit .form-help{-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;display:-webkit-box;display:-ms-flexbox;display:flex}.eval .count-text,.postit .count-text{font-style:italic;margin-left:auto;padding-left:1rem;white-space:nowrap}.eval .alert,.postit .alert{margin-bottom:2rem}.eval .grid .row,.postit .grid .row{padding:.5rem 0}.eval .grid .col,.postit .grid .col{border-top:1px solid var(--BORDER-LIGHT)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
